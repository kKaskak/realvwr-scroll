import { ShaderPass2 } from 'webgi/passes/threejs/ShaderPass2';
import { Camera, Vector2, WebGLRenderer, WebGLRenderTarget } from 'three';
import { UiObjectConfig } from 'webgi/interfaces';
export declare class TAAPass extends ShaderPass2 {
    target: WebGLRenderTarget;
    constructor(target: WebGLRenderTarget, gBufferUnpack?: string);
    taaEnabled: boolean;
    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void;
    updateCameraProperties(camera?: Camera): void;
    onSizeUpdate(): void;
    setSize(width: number, height: number): void;
    feedBack: Vector2;
    uiConfig: UiObjectConfig;
}
//# sourceMappingURL=TAAPass.d.ts.map