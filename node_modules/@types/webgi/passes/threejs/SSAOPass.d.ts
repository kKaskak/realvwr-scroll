import { ShaderPass2 } from 'webgi/passes/threejs/ShaderPass2';
import { BilateralFilterPass } from 'webgi/passes/threejs/BilateralFilterPass';
import { IRenderer, IRenderTarget } from 'webgi/interfaces';
import { WebGLRenderer, WebGLRenderTarget } from 'three';
import { MaterialExtension } from 'webgi/extras/asset_manager/threejs/MaterialExtender';
export interface SSAOParams {
    intensity: number;
    occlusionWorldRadius: number;
    bias: number;
    falloff: number;
    blurEnabled: boolean;
    edgeSharpness: number;
}
export declare class SSAOPass extends ShaderPass2 {
    private _target;
    private _renderer;
    readonly bilateralPass: BilateralFilterPass;
    readonly parameters: SSAOParams;
    constructor(renderer: IRenderer, target: IRenderTarget, gBufferUnpack: string);
    get smoothEnabled(): boolean;
    set smoothEnabled(value: boolean);
    private _smoothEnabled;
    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void;
    private _updateParameters;
    readonly materialExtension: MaterialExtension;
}
//# sourceMappingURL=SSAOPass.d.ts.map