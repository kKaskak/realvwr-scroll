import { Vector4, WebGLRenderer, WebGLRenderTarget } from 'three';
import { ShaderPass2 } from './ShaderPass2';
import { UiObjectConfig } from 'webgi/interfaces';
export declare class BloomPass extends ShaderPass2 {
    uiConfig?: UiObjectConfig;
    constructor();
    prefilter: Vector4;
    threshold: number;
    softThreshold: number;
    intensity: number;
    bloomIterations: number;
    radius: number;
    power: number;
    private _thresholdsUpdated;
    bloomDebug: boolean;
    private _weights;
    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void;
    private _updateWeights;
}
//# sourceMappingURL=BloomPass.d.ts.map