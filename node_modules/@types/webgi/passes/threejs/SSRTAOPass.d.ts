import { ShaderPass2 } from 'webgi/passes/threejs/ShaderPass2';
import { IRenderer, IRenderTarget, UiObjectConfig } from 'webgi/interfaces';
import { MaterialExtension } from 'webgi/extras/asset_manager/threejs/MaterialExtender';
import { WebGLRenderer, WebGLRenderTarget } from 'three';
import { BilateralFilterPass } from 'webgi/passes/threejs/BilateralFilterPass';
export declare class SSRTAOPass extends ShaderPass2 {
    private readonly _giActivated;
    get ssgiEnabled(): boolean;
    set ssgiEnabled(value: boolean);
    private _target;
    private _renderer;
    readonly materialExtension: MaterialExtension;
    readonly bilateralPass: BilateralFilterPass;
    constructor(renderer: IRenderer, target: IRenderTarget, gBufferUnpack: string, activateGI?: boolean);
    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void;
    intensity: number;
    power: number;
    autoRadius: boolean;
    objectRadius: number;
    tolerance: number;
    bias: number;
    falloff: number;
    rayCount: number;
    stepCount: number;
    smoothEnabled: boolean;
    renderWithCamera: boolean;
    uiConfig: UiObjectConfig;
}
//# sourceMappingURL=SSRTAOPass.d.ts.map