import { Vector2, WebGLRenderer, WebGLRenderTarget } from 'three';
import { ShaderMaterialEncodingSupport, ShaderPass2 } from 'webgi/passes/threejs/ShaderPass2';
import { Color } from 'three/src/math/Color';
import { UiObjectConfig } from 'webgi/interfaces';
export declare const combineDofShader: {
    uniforms: {
        colorTexture: {
            value: null;
        };
        tNormalDepth: {
            value: null;
        };
        blurTexture: {
            value: null;
        };
        cocTexture: {
            value: null;
        };
        cocTextureSize: {
            value: Vector2;
        };
        cameraNearFar: {
            value: Vector2;
        };
    };
    vertexShader: any;
    fragmentShader: string;
};
export declare class DepthOfFieldPass extends ShaderPass2 {
    computeCocMaterial: ShaderMaterialEncodingSupport;
    expandCocMaterial: ShaderMaterialEncodingSupport;
    dofBlurMaterial: ShaderMaterialEncodingSupport;
    nearFarBlurScale: Vector2;
    focalDepthRange: Vector2;
    crossCenter: Vector2;
    crossRadius: number;
    crossAlpha: number;
    crossColor: Color;
    constructor();
    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void;
    uiConfig: UiObjectConfig;
}
//# sourceMappingURL=DepthOfFieldPass.d.ts.map