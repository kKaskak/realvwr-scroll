import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { BufferGeometry, Curve, EllipseCurve, Mesh, Shape, Vector2, Vector3 } from 'three';
export declare class ShapeTubeExtrudePlugin extends AViewerPlugin<''> {
    enabled: boolean;
    static readonly PluginType = "ShapeTubeExtrudePlugin";
    onAdded(viewer: ViewerApp): Promise<void>;
    shapeSegments: number;
    tubularSegments: number;
    shapeScale: Vector2;
    materialSplits: string;
    horizontalSplits: boolean;
    extrudeCirceTube: () => Promise<void>;
    static CreateCurve(type: string, params: any): EllipseCurve3D;
    extrudeObject(object: Mesh, curve: Curve<Vector3>, shapeSegments?: number, tubularSegments?: number, shapeScale?: Vector2, materialSplits?: number[], horizontalSplits?: boolean): Promise<void>;
    static ExtrudeShape(shape: Shape, shapeSegments: number, tubularSegments: number, tubeCurve: Curve<Vector3>, shapeScaleX: number, shapeScaleY: number, materialSplits: number[], horizontalSplits: boolean): Mesh;
    static ConvertGeometryToFlatShape(geometry: BufferGeometry, sort?: boolean): any;
}
export declare class EllipseCurve3D extends EllipseCurve {
    getPoint(t: number, optionalTarget: any): Vector2;
}
//# sourceMappingURL=ShapeTubeExtrudePlugin.d.ts.map