import { MultiFilterPlugin } from 'webgi/plugins/MultiFilterPlugin';
import { IFilter, IPass, IRenderTarget, IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { GBufferPlugin } from 'webgi/plugins/GBufferPlugin';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class SSRTAOPlugin extends MultiFilterPlugin<'', [IFilter<IPass, 'ssrtao'>]> implements IViewerPlugin {
    dependencies: (typeof AssetManagerPlugin | typeof GBufferPlugin)[];
    get rtaoTarget(): IRenderTarget | undefined;
    static readonly PluginType = "SSRTAO";
    private _rtaoTarget?;
    constructor();
    onAdded(viewer: ViewerApp): Promise<void>;
    createPasses(v: ViewerApp): [IFilter<IPass, 'ssrtao'>];
    onRemove(viewer: ViewerApp): Promise<void>;
    setDirty(): void;
    get enabled(): boolean;
    set enabled(value: boolean);
    get uiConfig(): UiObjectConfig;
}
//# sourceMappingURL=SSRTAOPlugin.d.ts.map