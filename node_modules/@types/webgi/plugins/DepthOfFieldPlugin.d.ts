import { GenericFilterPlugin } from 'webgi/plugins/GenericFilterPlugin';
import { IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { DepthOfFieldPass } from 'webgi/passes/threejs/DepthOfFieldPass';
import { GBufferPlugin } from 'webgi/plugins/GBufferPlugin';
import { Vector3 } from 'three';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class DepthOfFieldPlugin extends GenericFilterPlugin<DepthOfFieldPass, 'depthOfField', ''> implements IViewerPlugin {
    static readonly PluginType = "DepthOfField";
    passId: 'depthOfField';
    protected _beforeFilters: string[];
    protected _afterFilters: string[];
    protected _requiredFilters: string[];
    dependencies: (typeof GBufferPlugin)[];
    passCtor(v: ViewerApp): DepthOfFieldPass;
    enableEdit: boolean;
    constructor(enabled?: boolean, enableEdit?: boolean);
    protected _focalPointHit: Vector3;
    crossFadeTime: number;
    setFocalPoint(p: Vector3, fade?: boolean, showGizmo?: boolean): void;
    getFocalPoint(): Vector3;
    get depthRange(): number;
    set depthRange(v: number);
    get nearBlurScale(): number;
    set nearBlurScale(v: number);
    get farBlurScale(): number;
    set farBlurScale(v: number);
    private _focalPointHitTime;
    protected get _frameFadeTime(): number;
    protected _onObjectHit(e: any): void;
    onAdded(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    setDirty(): void;
    private _tempVec;
    protected _update(v: ViewerApp): boolean;
    private _uiConfig?;
    get uiConfig(): UiObjectConfig;
}
//# sourceMappingURL=DepthOfFieldPlugin.d.ts.map