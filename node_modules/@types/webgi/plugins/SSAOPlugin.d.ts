import { IFilter, IRenderTarget, IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { GBufferPlugin } from './GBufferPlugin';
import { MultiFilterPlugin } from 'webgi/plugins/MultiFilterPlugin';
import { SSAOPass } from 'webgi/passes/threejs/SSAOPass';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class SSAOPlugin extends MultiFilterPlugin<'', [IFilter<SSAOPass, 'ssao'>], ViewerApp> implements IViewerPlugin {
    get aoTarget(): IRenderTarget | undefined;
    static readonly PluginType = "SSAO";
    private _aoTarget?;
    dependencies: (typeof AssetManagerPlugin | typeof GBufferPlugin)[];
    constructor();
    onAdded(viewer: ViewerApp): Promise<void>;
    createPasses(v: ViewerApp): [IFilter<SSAOPass, 'ssao'>];
    onRemove(viewer: ViewerApp): Promise<void>;
    setDirty(): void;
    get enabled(): boolean;
    set enabled(value: boolean);
    private _uiConfig?;
    get uiConfig(): UiObjectConfig;
}
//# sourceMappingURL=SSAOPlugin.d.ts.map