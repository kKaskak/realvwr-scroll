import { IFilter, IRenderTarget, IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { GBufferPlugin } from './GBufferPlugin';
import { MultiFilterPlugin } from 'webgi/plugins/MultiFilterPlugin';
import { ProgressivePlugin } from 'webgi/plugins/threejs/ProgressivePlugin';
import { SSRTAOPass } from 'webgi/passes/threejs/SSRTAOPass';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class SSGIPlugin extends MultiFilterPlugin<'', [IFilter<SSRTAOPass, 'ssrtgi'>]> implements IViewerPlugin {
    private _progressive;
    private _manager;
    get rtgiTarget(): IRenderTarget | undefined;
    static readonly PluginType = "SSGI";
    private _gbuffer?;
    private _rtgiTarget?;
    dependencies: (typeof AssetManagerPlugin | typeof ProgressivePlugin | typeof GBufferPlugin)[];
    private _initEnabled;
    constructor(enabled?: boolean);
    onAdded(viewer: ViewerApp): Promise<void>;
    get enabled(): boolean;
    set enabled(value: boolean);
    createPasses(v: ViewerApp): [IFilter<SSRTAOPass, 'ssrtgi'>];
    onRemove(viewer: ViewerApp): Promise<void>;
    setDirty(): void;
    get uiConfig(): UiObjectConfig;
}
//# sourceMappingURL=SSGIPlugin.d.ts.map