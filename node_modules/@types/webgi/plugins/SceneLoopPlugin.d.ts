import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { Zippable } from 'fflate';
import { IAsset } from 'webgi/extras/asset_manager/AssetManager';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class SceneLoopPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "SceneLoopPlugin";
    enabled: boolean;
    dependencies: (typeof AssetManagerPlugin)[];
    scenes: (Zippable & Record<string, Uint8Array>)[];
    assets: Record<string, IAsset>;
    toJSON: any;
    constructor();
    get loadedScenes(): number;
    promptLoadScenes(): Promise<void>;
    loadScenes(files: File[]): Promise<void>;
    private _isPlaying;
    private _isPlayingLoop;
    private _options;
    minSceneTime: number;
    play(): Promise<void>;
    stop(): void;
    downloadScenes(): Promise<void>;
    onAdded(viewer: ViewerApp): Promise<void>;
}
//# sourceMappingURL=SceneLoopPlugin.d.ts.map