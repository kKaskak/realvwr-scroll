import { BufferGeometry, Mesh, MeshStandardMaterial, OrthographicCamera } from 'three';
import type { Reflector2 } from 'webgi/helpers/threejs/Reflector2';
import { BaseGroundPlugin, GroundOptions } from 'webgi/plugins/BaseGroundPlugin';
import { IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class ContactShadowGroundPlugin<TMesh extends Mesh<BufferGeometry, MeshStandardMaterial> | Reflector2 = Mesh<BufferGeometry, MeshStandardMaterial> | Reflector2> extends BaseGroundPlugin<TMesh> implements IViewerPlugin {
    static readonly PluginType = "ContactShadowGroundPlugin";
    contactShadows: boolean;
    blurAmount: number;
    shadowScale: number;
    shadowHeight: number;
    private _showDebug;
    shadowCamera: OrthographicCamera;
    private _depthPass?;
    constructor(options?: Partial<GroundOptions>, showDebug?: boolean);
    onAdded(viewer: ViewerApp): Promise<void>;
    protected _postFrame(): void;
    protected _preRender(): void;
    private _blurShadow;
    onDispose(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    protected _refreshTransform(): void;
    private _refreshShadowCameraFrustum;
    private _setDirty;
    protected _removeMaterial(): void;
    refreshOptions(): void;
    protected _refreshMaterial(): boolean;
    protected _extraUiConfig(): (UiObjectConfig | (() => UiObjectConfig | UiObjectConfig[]))[];
}
//# sourceMappingURL=ContactShadowGroundPlugin.d.ts.map