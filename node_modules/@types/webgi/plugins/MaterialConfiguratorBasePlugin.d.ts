import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { MaterialPreviewGenerator } from 'webgi/helpers/threejs/MaterialPreviewGenerator';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { IMaterial, UiObjectConfig } from 'webgi/interfaces';
import { MeshStandardMaterial2 } from 'webgi/extras/asset_manager/threejs/MeshStandardMaterial2';
export declare abstract class MaterialConfiguratorBasePlugin extends AViewerPlugin<''> {
    enabled: boolean;
    static PluginType: string;
    private _picking;
    protected _previewGenerator: MaterialPreviewGenerator | undefined;
    private _uiNeedRefresh;
    onAdded(viewer: ViewerApp): Promise<void>;
    fromJSON(data: any, meta?: any): this | Promise<this | null> | null;
    onRemove(viewer: ViewerApp): Promise<void>;
    findVariation(uuid?: string): MaterialVariations | undefined;
    getSelectedVariation(): MaterialVariations | undefined;
    applyVariation(variations: MaterialVariations, matUuid: string): void;
    refreshUi(): void;
    private _refreshUiConfig;
    protected _refreshUi(): Promise<boolean>;
    dependencies: (typeof AssetManagerPlugin)[];
    variations: MaterialVariations[];
    private _selectedMaterial;
    uiConfig: UiObjectConfig;
    removeVariationForMaterial(material: IMaterial): void;
    removeVariation(variation: MaterialVariations): void;
    addVariation(material?: IMaterial): void;
}
export interface MaterialVariations {
    uuid: string;
    title: string;
    preview: keyof MeshStandardMaterial2 | 'generate:sphere';
    materials: IMaterial[];
}
//# sourceMappingURL=MaterialConfiguratorBasePlugin.d.ts.map