import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { IModel, UiObjectConfig } from 'webgi/interfaces';
import { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer';
import { Mesh, Vector3 } from 'three';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
/**
 * Refs:
 *   https://adndevblog.typepad.com/cloud_and_mobile/2015/07/embedding-webpages-in-a-3d-threejs-scene.html
 *   http://learningthreejs.com/blog/2013/04/30/closing-the-gap-between-html-and-webgl/
 *   https://github.com/jeromeetienne/threex.htmlmixer/
 *   https://chrome.google.com/webstore/detail/ignore-x-frame-headers/gleekbfjekiniecknbkamfmkohkpodhe
 *   https://github.com/guilryder/chrome-extensions/tree/main/xframe_ignore
 *
 * Extra bypass - doesn't work properly anymore:
 *     https://github.com/niutech/x-frame-bypass
 *     <script src="https://unpkg.com/@ungap/custom-elements-builtin"></script>
 *     <script type="module" src="https://unpkg.com/x-frame-bypass"></script>
 */
export declare class CSS3DRendererPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "CSS3DRenderer";
    private _renderer?;
    private _scene;
    enabled: boolean;
    overCanvas: boolean;
    constructor(enabled?: boolean);
    private _refreshEnabled;
    private _refreshCanvasInDOM;
    private _initialize;
    onAdded(viewer: ViewerApp): Promise<void>;
    private _trackers;
    attachIFrameToSelected: () => Promise<void>;
    attachIFrame(modelObj: IModel<Mesh>, url: string, clientWidth: number): CSS3DObject;
    attachCSS3DObject(cssObj: CSS3DObject, modelObj: IModel<Mesh>): void;
    private _syncProperties;
    uiConfig?: UiObjectConfig;
    private _resizeObserver;
    onDispose(viewer: ViewerApp): Promise<void>;
}
export interface CSSObjectTracker {
    cssObj: CSS3DObject;
    modelObj: Mesh;
    dirty: boolean;
}
export declare function createIFrameCSS3DObject(url: string, width: number, height: number, onload: () => void): CSS3DObject;
export declare function computeAverageGeometryNormal(modelObj: Mesh): Vector3;
export declare function computeGeometryCenter(modelObj: Mesh): Vector3;
export declare function computeGeometrySize(modelObj: Mesh, upVector?: Vector3): Vector3;
//# sourceMappingURL=CSS3DRendererPlugin.d.ts.map