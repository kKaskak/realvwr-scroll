import { IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { GenericFilterPlugin } from '../GenericFilterPlugin';
import { GBufferPlugin } from 'webgi/plugins/GBufferPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { CombinedPostPass } from 'webgi/passes/threejs/CombinedPostPass';
import { MaterialExtension } from 'webgi/extras/asset_manager/threejs/MaterialExtender';
export declare class CombinedPostPlugin extends GenericFilterPlugin<CombinedPostPass, 'combinedPost', '', ViewerApp> implements IViewerPlugin {
    readonly depthTonemap: boolean;
    static readonly PluginType = "CombinedPostPlugin";
    passId: 'combinedPost';
    dependencies: (typeof GBufferPlugin)[];
    toJSON: any;
    protected _beforeFilters: never[];
    protected _afterFilters: string[];
    protected _requiredFilters: string[];
    private _renderToScreen;
    get renderToScreen(): boolean;
    constructor(depthTonemap?: boolean, renderToScreen?: boolean);
    onAdded(viewer: ViewerApp): Promise<void>;
    passCtor(v: ViewerApp): CombinedPostPass;
    protected _update(v: ViewerApp): boolean;
    private _setDirty;
    get uiConfig(): UiObjectConfig;
    addExtension(extension: MaterialExtension): void;
}
//# sourceMappingURL=CombinedPostPlugin.d.ts.map