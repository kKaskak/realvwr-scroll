import { UiObjectConfig } from 'webgi/interfaces';
import { CanvasRecorder } from '../extras/canvas_recorder/CanvasRecorder';
import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import type { IConvergedCanvasRecorder } from 'webgi/plugins/threejs/ProgressivePlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class CanvasRecorderPlugin extends AViewerPlugin<'start' | 'stop' | 'error'> implements IConvergedCanvasRecorder {
    enabled: boolean;
    get recorder(): CanvasRecorder | undefined;
    isRecording(): boolean;
    static readonly PluginType = "CanvasRecorder";
    convergeMode: boolean;
    mimeType: 'auto' | 'image/png' | 'image/jpeg' | string;
    videoFrameRate: number;
    refreshRecorderOptions(): void;
    private _recorder?;
    onAdded(viewer: ViewerApp): Promise<void>;
    private _renderToScreenDisabled;
    private _preRender;
    private _postRender;
    private _refreshUi;
    private _stateChange;
    onRemove(viewer: ViewerApp): Promise<void>;
    startRecording(): boolean;
    stopRecording(): Promise<Blob | undefined>;
    private _uiConfig?;
    get uiConfig(): UiObjectConfig;
}
//# sourceMappingURL=CanvasRecorderPlugin.d.ts.map