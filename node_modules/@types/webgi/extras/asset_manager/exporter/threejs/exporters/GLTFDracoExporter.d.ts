import { IExportParser } from 'webgi/extras/asset_manager/AssetManager';
import { DRACOLoader2 } from 'webgi/extras/asset_manager/importer/threejs/loaders/DRACOLoader2';
import { EncoderOptions } from '@gltf-transform/extensions/dist/khr-draco-mesh-compression/encoder';
import { AnyOptions } from 'webgi/interfaces';
import { GLTFExporter2 } from 'webgi/extras/asset_manager/exporter/threejs/exporters/GLTFExporter2';
import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { AssetExporterPlugin } from 'webgi/extras/asset_manager/AssetExporterPlugin';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class GLTFDracoExporter extends GLTFExporter2 implements IExportParser {
    loader?: DRACOLoader2;
    private _io;
    private _loadedLibs;
    private _encoderOptions;
    constructor(encoderOptions?: EncoderOptions);
    preload(): this;
    private _loadLibs;
    parseAsync(obj: any, { compress, ...options }: {
        compress: boolean;
    } & AnyOptions): Promise<Blob>;
}
export declare class GLTFDracoExportPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "GLTFDracoExportPlugin";
    enabled: boolean;
    dependencies: (typeof AssetManagerPlugin | typeof AssetExporterPlugin)[];
    onAdded(viewer: ViewerApp): Promise<void>;
}
//# sourceMappingURL=GLTFDracoExporter.d.ts.map