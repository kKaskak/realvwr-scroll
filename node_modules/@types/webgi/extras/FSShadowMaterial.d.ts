import { Shader, ShadowMaterial, WebGLRenderer } from 'three';
import { AnyOptions, IMaterial, ITexture } from 'webgi/interfaces';
export declare class FSShadowMaterial extends ShadowMaterial implements IMaterial {
    readonly typeSlug = "fsShadow";
    assetType: 'material';
    private _uniforms;
    lastFrameTexture: ITexture | null;
    get materialObject(): ShadowMaterial;
    onBeforeCompile(shader: Shader, renderer: WebGLRenderer): void;
    customProgramCacheKey(): string;
    toJSON(meta?: any): any;
    fromJSON(data: any, meta?: any): this | null;
    copyProps(oldMaterial: any): this;
    setDirty(options?: AnyOptions): void;
}
//# sourceMappingURL=FSShadowMaterial.d.ts.map