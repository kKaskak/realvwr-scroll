export interface SRect {
    height: number;
    width: number;
    x: number;
    y: number;
    assumeClientRect: boolean;
}
export interface SnipOptions {
    getDataUrl?: boolean;
    mimeType?: string;
    rect?: SRect;
    displayPixelRatio?: number;
    scale?: number;
    timeout?: number;
    waitForProgressive?: boolean;
}
export declare class CanvasSnipper {
    static GetDataUrl(canvas: HTMLCanvasElement, { mimeType, rect, displayPixelRatio, scale, }: SnipOptions): Promise<string>;
    static GetImage(canvas: HTMLCanvasElement, options?: SnipOptions): Promise<HTMLImageElement>;
    static GetBlob(canvas: HTMLCanvasElement, options?: SnipOptions): Promise<Blob>;
    static GetFile(canvas: HTMLCanvasElement, filename?: string, options?: SnipOptions): Promise<File | string>;
}
//# sourceMappingURL=canvasSnipper.d.ts.map