import { AnyOptions } from 'webgi/interfaces';
export declare function getPropertyDescriptor<T>(obj: T, prop: keyof T): PropertyDescriptor | undefined;
export declare function isPropertyWritable<T>(object: T, prop: keyof T, allowWritable?: boolean, allowAny?: boolean): boolean;
/**
 * Set value only if setter exists
 * @param object
 * @param prop
 * @param value
 */
export declare function safeSetProperty<T, K extends keyof T>(object: T | undefined | null, prop: K, value: T[K], allowWritable?: boolean, allowAny?: boolean): boolean;
export declare function deepAccessObject(access: string[], tar: any): any;
export declare function getKeyByValue(object: Record<string, any>, value: any): string | undefined;
export declare function getOrCall<T>(s: undefined | T | ((...a: any[]) => undefined | T), ...args: any[]): T | undefined;
export declare function copyProps(source: AnyOptions, dest: AnyOptions, propList: string[]): void;
export declare function escapeRegExp(str: string): string;
export declare function replaceAll(str: string, find: string, replace: string): string;
export declare const glsl: (strings: any, ...rest: any[]) => string;
export declare const css: (strings: any, ...rest: any[]) => string;
export declare const html: (strings: any, ...rest: any[]) => string;
export declare const svgUrl: (strings: any, ...rest: any[]) => string;
export declare type AnyFunction = (...args: any[]) => any;
/**
 * @param fnKey - use: \<MyClass\>.prototype.\<myFunction\>.name
 */
export declare function onChange(fnKey: string | AnyFunction): PropertyDecorator;
export declare function includesAll(arr: any[], subArr: IterableIterator<any>): boolean;
//# sourceMappingURL=refl.d.ts.map