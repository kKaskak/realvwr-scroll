import { BufferGeometry, Matrix4, Mesh, MeshPhysicalMaterial, WebGLRenderTarget } from 'three';
import { MaterialExtension } from 'webgi/extras/asset_manager/threejs/MaterialExtender';
export declare class Reflector2 extends Mesh<BufferGeometry, MeshPhysicalMaterial> {
    type: string;
    readonly isReflector2 = true;
    private _renderTarget;
    readonly textureMatrix: Matrix4;
    enabled: boolean;
    reflectorModePhysical: boolean;
    reflectionTargetNeedsUpdate: boolean;
    transparentReflectionBackground: boolean;
    private _updateExtension;
    constructor(geometry: BufferGeometry, renderTarget: WebGLRenderTarget, clipBias?: number);
    getRenderTarget(): WebGLRenderTarget;
    readonly materialExtension: MaterialExtension;
}
//# sourceMappingURL=Reflector2.d.ts.map