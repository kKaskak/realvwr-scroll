import { BufferGeometry, Line, Mesh, Object3D } from 'three';
import { IMaterial, IModel } from 'webgi/interfaces';
/**
 * Converts three.js Object3D to IModel, setup object events, adds utility methods, and runs model processor.
 * @param object
 * @param parent
 * @param modelProcessor
 */
export declare function setupIModel(object: Object3D & IModel, parent?: IModel | undefined, modelProcessor?: (m: IModel) => (IModel | undefined)): IModel & Object3D;
export declare function setMeshMaterial(mesh: (Mesh | Line) & IModel, material: IMaterial | undefined | null | IMaterial[]): IMaterial[];
export declare function setMeshGeometry(mesh: (Mesh | Line) & IModel, geometry: BufferGeometry | undefined | null, force?: boolean): BufferGeometry | undefined;
export declare const iGeometryIgnoredUserData: string[];
export declare const iModelIgnoredUserData: string[];
export declare function copyObject3DUserData(dest: any, source: any): any;
//# sourceMappingURL=iModelSetup.d.ts.map