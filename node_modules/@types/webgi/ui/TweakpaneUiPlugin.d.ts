import { Class, IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { TweakpaneWrapper } from 'webgi/ui/TweakpaneWrapper';
export declare class TweakpaneUiPlugin extends TweakpaneWrapper implements IViewerPlugin {
    static readonly PluginType = "TweakpaneUi";
    private _viewer?;
    dependencies: (typeof AssetManagerPlugin)[];
    constructor(expanded?: boolean, bigTheme?: boolean, limitedOptions?: boolean, container?: HTMLElement);
    onAdded(viewer: ViewerApp): Promise<void>;
    onDispose(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    private _preRender;
    private _postRender;
    private _postFrame;
    private _preFrame;
    private _plugins;
    setupPluginUi<T extends IViewerPlugin>(plugin: Class<T>): UiObjectConfig | undefined;
    setupPlugins<T extends IViewerPlugin>(...plugins: Class<T>[]): void;
    refreshPluginsEnabled(): void;
    alert: (message?: string | undefined) => Promise<void>;
    confirm: (message?: string | undefined) => Promise<boolean>;
    prompt: (message?: string | undefined, _default?: string | undefined, cancel?: boolean) => Promise<string | null>;
}
//# sourceMappingURL=TweakpaneUiPlugin.d.ts.map