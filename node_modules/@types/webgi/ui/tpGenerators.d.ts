import { ButtonApi, FolderApi, InputBindingApi, MonitorBindingApi } from 'tweakpane';
import { UiObjectConfig } from 'webgi/interfaces';
import { TweakpaneWrapper } from './TweakpaneWrapper';
export declare const tpFolderGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => FolderApi;
export declare const tpButtonInputGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => ButtonApi;
export declare const tpDropdownInputGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => InputBindingApi<any, any> | MonitorBindingApi<any> | undefined;
export declare const tpSliderInputGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => InputBindingApi<any, any> | MonitorBindingApi<any> | undefined;
export declare const tpVecInputGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => InputBindingApi<any, any> | MonitorBindingApi<any> | undefined;
export declare const tpColorInputGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => InputBindingApi<any, any> | MonitorBindingApi<any> | undefined;
export declare const tpInputGenerator: (parent: FolderApi, config: UiObjectConfig, plugin: TweakpaneWrapper, params?: any) => InputBindingApi<any, any> | MonitorBindingApi<any> | undefined;
//# sourceMappingURL=tpGenerators.d.ts.map