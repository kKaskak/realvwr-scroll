import { SimpleEventDispatcher } from 'webgi/helpers/EventDispatcher';
import { FolderApi, Pane } from 'tweakpane';
import { IUiConfigContainer, TUiRefreshModes, UiObjectConfig } from 'webgi/interfaces';
export declare class TweakpaneWrapper extends SimpleEventDispatcher<'postFrame'> {
    protected _pane?: Pane;
    private _expand;
    private _limitedOptions;
    constructor(expanded?: boolean, bigTheme?: boolean, limitedOptions?: boolean, autoPostFrame?: boolean, container?: HTMLElement);
    protected _refreshQueue: Record<TUiRefreshModes, [IUiConfigContainer | undefined, FolderApi | undefined, number, string | undefined][]>;
    private _lastModeTime;
    refreshQueue(mode: TUiRefreshModes): void;
    addToRefreshQueue(mode: TUiRefreshModes, params: [IUiConfigContainer | undefined, FolderApi | undefined, number]): void;
    dispose(): void;
    appendUiObject(p?: IUiConfigContainer, parent?: FolderApi): void;
    protected _typeGenerators: any;
    protected _appendUiObject(objectMain?: IUiConfigContainer, parent?: FolderApi): void;
    removeUiObject(objectMain?: IUiConfigContainer): void;
    /**
     * Dispose and removes the UI associated with a config, doesn't makes change to the object or its parent.
     * @param uiConfig
     */
    removeUiConfig(uiConfig?: UiObjectConfig): void;
    private _uiObjectRefresh;
    private _refreshUiObject;
    private _createUiContainer;
    alert: (message?: string | undefined) => Promise<void>;
    confirm: (message?: string | undefined) => Promise<boolean>;
    prompt: (message?: string | undefined, _default?: string | undefined, cancel?: boolean) => Promise<string | null>;
}
export declare function flattenUiConfig(uiC: UiObjectConfig, par?: FolderApi, list?: {
    uiConfig: UiObjectConfig;
    parentFolder?: FolderApi;
}[]): {
    uiConfig: UiObjectConfig;
    parentFolder?: FolderApi | undefined;
}[];
//# sourceMappingURL=TweakpaneWrapper.d.ts.map